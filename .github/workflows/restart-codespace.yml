name: Restart Codespace
on:
  repository_dispatch:
    types: [restart-codespace]
jobs:
  restart:
    runs-on: ubuntu-latest
    steps:
      - name: Install GitHub CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y gh jq
          echo "GitHub CLI version:"
          gh --version
      - name: Authenticate GitHub CLI
        run: |
          echo "${{ secrets.CODESPACE_PAT }}" | gh auth login --with-token
          gh auth status
      - name: Restart Codespace
        env:
          CODESPACE_NAME: ${{ github.event.client_payload.codespace_name }}
        run: |
          echo "Waiting 120 seconds to ensure stop completes..."
          sleep 120
          RETRY_COUNT=0
          MAX_RETRIES=3
          until [ $RETRY_COUNT -ge $MAX_RETRIES ]; do
            START_OUTPUT=$(gh api -X POST \
              -H "Accept: application/vnd.github.v3+json" \
              /user/codespaces/$CODESPACE_NAME/start 2>&1)
            START_STATUS=$?
            if [ $START_STATUS -eq 0 ]; then
              echo "Codespace $CODESPACE_NAME restart initiated successfully."
              exit 0
            fi
            echo "Failed to restart Codespace $CODESPACE_NAME (Attempt $((RETRY_COUNT + 1))/$MAX_RETRIES)."
            echo "Error details: $START_OUTPUT"
            if echo "$START_OUTPUT" | grep -q "HTTP 409"; then
              echo "Conflict detected (HTTP 409). Retrying in 30 seconds..."
              sleep 30
            else
              echo "Non-retryable error. Exiting."
              exit 1
            fi
            RETRY_COUNT=$((RETRY_COUNT + 1))
          done
          echo "Failed to restart Codespace $CODESPACE_NAME after $MAX_RETRIES attempts."
          exit 1
      - name: Verify Codespace State
        env:
          CODESPACE_NAME: ${{ github.event.client_payload.codespace_name }}
        run: |
          echo "Waiting 180 seconds for Codespace to stabilize..."
          sleep 180
          echo "Fetching Codespace details..."
          CODESPACE_DETAILS=$(gh api /user/codespaces/$CODESPACE_NAME --jq '{state: .state, web_url: .web_url}')
          CODESPACE_STATE=$(echo "$CODESPACE_DETAILS" | jq -r '.state')
          echo "Codespace state: $CODESPACE_STATE"
          if [ "$CODESPACE_STATE" != "Available" ]; then
            echo "Error: Codespace $CODESPACE_NAME is not in Available state."
            exit 1
          fi
          echo "Codespace $CODESPACE_NAME is ready for connection."
