name: Restart Codespace
on:
  repository_dispatch:
    types: [restart-codespace]
jobs:
  restart:
    runs-on: ubuntu-latest
    steps:
      - name: Install GitHub CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y gh
      - name: Authenticate GitHub CLI
        run: |
          echo "Authenticating with PAT..."
          echo "${{ secrets.CODESPACE_PAT }}" | gh auth login --with-token
          gh auth status
      - name: Restart Codespace
        env:
          CODESPACE_NAME: ${{ github.event.client_payload.codespace_name }}
        run: |
          echo "Waiting 120 seconds to ensure stop completes..."
          sleep 120
          echo "Attempting to restart Codespace $CODESPACE_NAME..."
          RETRY_COUNT=0
          MAX_RETRIES=3
          until [ $RETRY_COUNT -ge $MAX_RETRIES ]; do
            START_OUTPUT=$(gh api -X POST \
              -H "Accept: application/vnd.github.v3+json" \
              /user/codespaces/$CODESPACE_NAME/start 2>&1)
            START_STATUS=$?
            if [ $START_STATUS -eq 0 ]; then
              echo "Codespace $CODESPACE_NAME restart initiated successfully."
              exit 0
            fi
            echo "Failed to restart Codespace $CODESPACE_NAME (Attempt $((RETRY_COUNT + 1))/$MAX_RETRIES)."
            echo "Error details: $START_OUTPUT"
            if echo "$START_OUTPUT" | grep -q "HTTP 409"; then
              echo "Conflict detected (HTTP 409). Retrying in 30 seconds..."
              sleep 30
            else
              echo "Non-retryable error. Exiting."
              exit 1
            fi
            RETRY_COUNT=$((RETRY_COUNT + 1))
          done
          echo "Failed to restart Codespace $CODESPACE_NAME after $MAX_RETRIES attempts."
          exit 1
      - name: Wake Up Codespace
        env:
          CODESPACE_NAME: ${{ github.event.client_payload.codespace_name }}
        run: |
          echo "Waiting 30 seconds for Codespace to stabilize..."
          sleep 30
          echo "Fetching Codespace details to get forwarded port URL..."
          CODESPACE_DETAILS=$(gh api -X GET \
            -H "Accept: application/vnd.github.v3+json" \
            /user/codespaces/$CODESPACE_NAME)
          PORT_URL=$(echo "$CODESPACE_DETAILS" | jq -r '.remote_port_mappings[] | select(.source_port == 6200) | .public_url' 2>/dev/null || echo "")
          if [ -z "$PORT_URL" ]; then
            echo "Warning: Could not find public URL for port 6200. Port forwarding may not be initialized."
          else
            echo "Waking up Codespace $CODESPACE_NAME by accessing port 6200 at $PORT_URL..."
            RETRY_COUNT=0
            MAX_RETRIES=3
            until [ $RETRY_COUNT -ge $MAX_RETRIES ]; do
              curl -s -k --connect-timeout 10 "$PORT_URL" >/dev/null 2>&1
              CURL_STATUS=$?
              if [ $CURL_STATUS -eq 0 ]; then
                echo "Successfully accessed port 6200 at $PORT_URL."
                break
              fi
              echo "Failed to access port 6200 (Attempt $((RETRY_COUNT + 1))/$MAX_RETRIES). Retrying in 10 seconds..."
              sleep 10
              RETRY_COUNT=$((RETRY_COUNT + 1))
            done
            if [ $RETRY_COUNT -ge $MAX_RETRIES ]; then
              echo "Warning: Failed to access port 6200 after $MAX_RETRIES attempts. VNC may not be accessible immediately."
            fi
          fi
